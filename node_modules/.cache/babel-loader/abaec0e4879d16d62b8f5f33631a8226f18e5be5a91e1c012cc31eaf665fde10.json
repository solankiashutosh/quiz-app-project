{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Asus/quizapp-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Asus/quizapp-project/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/Asus/quizapp-project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/Asus/quizapp-project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Asus/quizapp-project/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _excluded = [\"willChange\"];\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\nvar propEventHandlers = [\"AnimationStart\", \"AnimationComplete\", \"Update\", \"Unmount\", \"BeforeLayoutMeasure\", \"LayoutMeasure\", \"LayoutAnimationStart\", \"LayoutAnimationComplete\"];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nvar VisualElement = /*#__PURE__*/function () {\n  function VisualElement(_ref) {\n    var _this = this;\n    var parent = _ref.parent,\n      props = _ref.props,\n      reducedMotionConfig = _ref.reducedMotionConfig,\n      visualState = _ref.visualState;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, VisualElement);\n    /**\n     * A reference to the current underlying Instance, e.g. a HTMLElement\n     * or Three.Mesh etc.\n     */\n    this.current = null;\n    /**\n     * A set containing references to this VisualElement's children.\n     */\n    this.children = new Set();\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n    this.isVariantNode = false;\n    this.isControllingVariants = false;\n    /**\n     * Decides whether this VisualElement should animate in reduced motion\n     * mode.\n     *\n     * TODO: This is currently set on every individual VisualElement but feels\n     * like it could be set globally.\n     */\n    this.shouldReduceMotion = null;\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n    this.values = new Map();\n    /**\n     * Tracks whether this VisualElement's React component is currently present\n     * within the defined React tree.\n     */\n    this.isPresent = true;\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n    this.valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n    this.prevMotionValues = {};\n    /**\n     * An object containing a SubscriptionManager for each active event.\n     */\n    this.events = {};\n    /**\n     * An object containing an unsubscribe function for each prop event subscription.\n     * For example, every \"Update\" event can have multiple subscribers via\n     * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n     */\n    this.propEventSubscriptions = {};\n    this.notifyUpdate = function () {\n      return _this.notify(\"Update\", _this.latestValues);\n    };\n    this.render = function () {\n      if (!_this.current) return;\n      _this.triggerBuild();\n      _this.renderInstance(_this.current, _this.renderState, _this.props.style, _this.projection);\n    };\n    this.scheduleRender = function () {\n      return sync.render(_this.render, false, true);\n    };\n    var latestValues = visualState.latestValues,\n      renderState = visualState.renderState;\n    this.latestValues = latestValues;\n    this.baseTarget = _objectSpread({}, latestValues);\n    this.initialValues = props.initial ? _objectSpread({}, latestValues) : {};\n    this.renderState = renderState;\n    this.parent = parent;\n    this.props = props;\n    this.depth = parent ? parent.depth + 1 : 0;\n    this.reducedMotionConfig = reducedMotionConfig;\n    this.options = options;\n    this.isControllingVariants = isControllingVariants(props);\n    this.isVariantNode = isVariantNode(props);\n    if (this.isVariantNode) {\n      this.variantChildren = new Set();\n    }\n    this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n    var _this$scrapeMotionVal = this.scrapeMotionValuesFromProps(props),\n      willChange = _this$scrapeMotionVal.willChange,\n      initialMotionValues = _objectWithoutProperties(_this$scrapeMotionVal, _excluded);\n    for (var key in initialMotionValues) {\n      var value = initialMotionValues[key];\n      if (latestValues[key] !== undefined && isMotionValue(value)) {\n        value.set(latestValues[key], false);\n        if (isWillChangeMotionValue(willChange)) {\n          willChange.add(key);\n        }\n      }\n    }\n  }\n  /**\n   * This method takes React props and returns found MotionValues. For example, HTML\n   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n   *\n   * This isn't an abstract method as it needs calling in the constructor, but it is\n   * intended to be one.\n   */\n  _createClass(VisualElement, [{\n    key: \"scrapeMotionValuesFromProps\",\n    value: function scrapeMotionValuesFromProps(_props) {\n      return {};\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(instance) {\n      var _this2 = this;\n      var _a;\n      this.current = instance;\n      if (this.projection) {\n        this.projection.mount(instance);\n      }\n      if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n        this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n      }\n      this.values.forEach(function (value, key) {\n        return _this2.bindToMotionValue(key, value);\n      });\n      if (!hasReducedMotionListener.current) {\n        initPrefersReducedMotion();\n      }\n      this.shouldReduceMotion = this.reducedMotionConfig === \"never\" ? false : this.reducedMotionConfig === \"always\" ? true : prefersReducedMotion.current;\n      if (this.parent) this.parent.children.add(this);\n      this.setProps(this.props);\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      var _a, _b, _c;\n      (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n      cancelSync.update(this.notifyUpdate);\n      cancelSync.render(this.render);\n      this.valueSubscriptions.forEach(function (remove) {\n        return remove();\n      });\n      (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n      (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n      for (var key in this.events) {\n        this.events[key].clear();\n      }\n      this.current = null;\n    }\n  }, {\n    key: \"bindToMotionValue\",\n    value: function bindToMotionValue(key, value) {\n      var _this3 = this;\n      var valueIsTransform = transformProps.has(key);\n      var removeOnChange = value.on(\"change\", function (latestValue) {\n        _this3.latestValues[key] = latestValue;\n        _this3.props.onUpdate && sync.update(_this3.notifyUpdate, false, true);\n        if (valueIsTransform && _this3.projection) {\n          _this3.projection.isTransformDirty = true;\n        }\n      });\n      var removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n      this.valueSubscriptions.set(key, function () {\n        removeOnChange();\n        removeOnRenderRequest();\n      });\n    }\n  }, {\n    key: \"sortNodePosition\",\n    value: function sortNodePosition(other) {\n      /**\n       * If these nodes aren't even of the same type we can't compare their depth.\n       */\n      if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) return 0;\n      return this.sortInstanceNodePosition(this.current, other.current);\n    }\n  }, {\n    key: \"loadFeatures\",\n    value: function loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n      var _this4 = this;\n      var features = [];\n      /**\n       * If we're in development mode, check to make sure we're not rendering a motion component\n       * as a child of LazyMotion, as this will break the file-size benefits of using it.\n       */\n      if (env !== \"production\" && preloadedFeatures && isStrict) {\n        invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n      }\n      for (var i = 0; i < numFeatures; i++) {\n        var name = featureNames[i];\n        var _featureDefinitions$n = featureDefinitions[name],\n          isEnabled = _featureDefinitions$n.isEnabled,\n          Component = _featureDefinitions$n.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(renderedProps) && Component) {\n          features.push(createElement(Component, _objectSpread(_objectSpread({\n            key: name\n          }, renderedProps), {}, {\n            visualElement: this\n          })));\n        }\n      }\n      if (!this.projection && ProjectionNodeConstructor) {\n        this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n        var layoutId = renderedProps.layoutId,\n          layout = renderedProps.layout,\n          drag = renderedProps.drag,\n          dragConstraints = renderedProps.dragConstraints,\n          layoutScroll = renderedProps.layoutScroll;\n        this.projection.setOptions({\n          layoutId: layoutId,\n          layout: layout,\n          alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n          visualElement: this,\n          scheduleRender: function scheduleRender() {\n            return _this4.scheduleRender();\n          },\n          /**\n           * TODO: Update options in an effect. This could be tricky as it'll be too late\n           * to update by the time layout animations run.\n           * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n           * ensuring it gets called if there's no potential layout animations.\n           *\n           */\n          animationType: typeof layout === \"string\" ? layout : \"both\",\n          initialPromotionConfig: initialLayoutGroupConfig,\n          layoutScroll: layoutScroll\n        });\n      }\n      return features;\n    }\n  }, {\n    key: \"triggerBuild\",\n    value: function triggerBuild() {\n      this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n  }, {\n    key: \"measureViewportBox\",\n    value: function measureViewportBox() {\n      return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();\n    }\n  }, {\n    key: \"getStaticValue\",\n    value: function getStaticValue(key) {\n      return this.latestValues[key];\n    }\n  }, {\n    key: \"setStaticValue\",\n    value: function setStaticValue(key, value) {\n      this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n  }, {\n    key: \"makeTargetAnimatable\",\n    value: function makeTargetAnimatable(target) {\n      var canMutate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n  }, {\n    key: \"setProps\",\n    value: function setProps(props) {\n      if (props.transformTemplate || this.props.transformTemplate) {\n        this.scheduleRender();\n      }\n      this.props = props;\n      /**\n       * Update prop event handlers ie onAnimationStart, onAnimationComplete\n       */\n      for (var i = 0; i < propEventHandlers.length; i++) {\n        var key = propEventHandlers[i];\n        if (this.propEventSubscriptions[key]) {\n          this.propEventSubscriptions[key]();\n          delete this.propEventSubscriptions[key];\n        }\n        var listener = props[\"on\" + key];\n        if (listener) {\n          this.propEventSubscriptions[key] = this.on(key, listener);\n        }\n      }\n      this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps() {\n      return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n  }, {\n    key: \"getVariant\",\n    value: function getVariant(name) {\n      var _a;\n      return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n  }, {\n    key: \"getDefaultTransition\",\n    value: function getDefaultTransition() {\n      return this.props.transition;\n    }\n  }, {\n    key: \"getTransformPagePoint\",\n    value: function getTransformPagePoint() {\n      return this.props.transformPagePoint;\n    }\n  }, {\n    key: \"getClosestVariantNode\",\n    value: function getClosestVariantNode() {\n      var _a;\n      return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n  }, {\n    key: \"getVariantContext\",\n    value: function getVariantContext() {\n      var startAtParent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _a, _b;\n      if (startAtParent) return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n      if (!this.isControllingVariants) {\n        var _context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n        if (this.props.initial !== undefined) {\n          _context.initial = this.props.initial;\n        }\n        return _context;\n      }\n      var context = {};\n      for (var i = 0; i < numVariantProps; i++) {\n        var name = variantProps[i];\n        var prop = this.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n          context[name] = prop;\n        }\n      }\n      return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n  }, {\n    key: \"addVariantChild\",\n    value: function addVariantChild(child) {\n      var _a;\n      var closestVariantNode = this.getClosestVariantNode();\n      if (closestVariantNode) {\n        (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n        return function () {\n          return closestVariantNode.variantChildren.delete(child);\n        };\n      }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n  }, {\n    key: \"addValue\",\n    value: function addValue(key, value) {\n      // Remove existing value if it exists\n      if (this.hasValue(key)) this.removeValue(key);\n      this.values.set(key, value);\n      this.latestValues[key] = value.get();\n      this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n  }, {\n    key: \"removeValue\",\n    value: function removeValue(key) {\n      var _a;\n      this.values.delete(key);\n      (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n      this.valueSubscriptions.delete(key);\n      delete this.latestValues[key];\n      this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n  }, {\n    key: \"hasValue\",\n    value: function hasValue(key) {\n      return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n  }, {\n    key: \"getValue\",\n    value: function getValue(key, defaultValue) {\n      if (this.props.values && this.props.values[key]) {\n        return this.props.values[key];\n      }\n      var value = this.values.get(key);\n      if (value === undefined && defaultValue !== undefined) {\n        value = motionValue(defaultValue, {\n          owner: this\n        });\n        this.addValue(key, value);\n      }\n      return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n  }, {\n    key: \"readValue\",\n    value: function readValue(key) {\n      return this.latestValues[key] !== undefined || !this.current ? this.latestValues[key] : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n  }, {\n    key: \"setBaseTarget\",\n    value: function setBaseTarget(key, value) {\n      this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n  }, {\n    key: \"getBaseTarget\",\n    value: function getBaseTarget(key) {\n      var _a;\n      var initial = this.props.initial;\n      var valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\" ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key] : undefined;\n      /**\n       * If this value still exists in the current initial variant, read that.\n       */\n      if (initial && valueFromInitial !== undefined) {\n        return valueFromInitial;\n      }\n      /**\n       * Alternatively, if this VisualElement config has defined a getBaseTarget\n       * so we can read the value from an alternative source, try that.\n       */\n      var target = this.getBaseTargetFromProps(this.props, key);\n      if (target !== undefined && !isMotionValue(target)) return target;\n      /**\n       * If the value was initially defined on initial, but it doesn't any more,\n       * return undefined. Otherwise return the value as initially read from the DOM.\n       */\n      return this.initialValues[key] !== undefined && valueFromInitial === undefined ? undefined : this.baseTarget[key];\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!this.events[eventName]) {\n        this.events[eventName] = new SubscriptionManager();\n      }\n      return this.events[eventName].add(callback);\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(eventName) {\n      var _a2;\n      var _a;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).notify.apply(_a2, args);\n    }\n  }]);\n  return VisualElement;\n}();\nvar variantProps = [\"initial\"].concat(_toConsumableArray(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\nexport { VisualElement };","map":{"version":3,"names":["sync","cancelSync","invariant","createElement","featureDefinitions","createBox","isRefObject","env","initPrefersReducedMotion","hasReducedMotionListener","prefersReducedMotion","SubscriptionManager","motionValue","isWillChangeMotionValue","isMotionValue","transformProps","variantPriorityOrder","isControllingVariants","isVariantNode","isVariantLabel","updateMotionValuesFromProps","resolveVariantFromProps","featureNames","Object","keys","numFeatures","length","propEventHandlers","VisualElement","_ref","_this","parent","props","reducedMotionConfig","visualState","options","arguments","undefined","_classCallCheck","current","children","Set","shouldReduceMotion","values","Map","isPresent","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","render","triggerBuild","renderInstance","renderState","style","projection","scheduleRender","baseTarget","_objectSpread","initialValues","initial","depth","variantChildren","manuallyAnimateOnMount","Boolean","_this$scrapeMotionVal","scrapeMotionValuesFromProps","willChange","initialMotionValues","_objectWithoutProperties","_excluded","key","value","set","add","_createClass","_props","mount","instance","_this2","_a","removeFromVariantTree","addVariantChild","forEach","bindToMotionValue","setProps","unmount","_b","_c","update","remove","call","delete","clear","_this3","valueIsTransform","has","removeOnChange","on","latestValue","onUpdate","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","type","loadFeatures","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","_this4","features","i","name","_featureDefinitions$n","isEnabled","Component","push","visualElement","layoutId","layout","drag","dragConstraints","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureViewportBox","measureInstanceViewportBox","getStaticValue","setStaticValue","makeTargetAnimatable","target","canMutate","makeTargetAnimatableFromInstance","transformTemplate","listener","getProps","getVariant","variants","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","getVariantContext","startAtParent","context","numVariantProps","variantProps","prop","child","closestVariantNode","addValue","hasValue","removeValue","get","removeValueFromRenderState","getValue","defaultValue","owner","readValue","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","getBaseTargetFromProps","eventName","callback","_a2","_len","args","Array","_key","apply","concat","_toConsumableArray"],"sources":["C:/Users/Asus/quizapp-project/node_modules/framer-motion/dist/es/render/VisualElement.mjs"],"sourcesContent":["import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}