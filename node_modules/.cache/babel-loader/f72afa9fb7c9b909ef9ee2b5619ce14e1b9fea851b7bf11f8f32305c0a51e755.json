{"ast":null,"code":"import _slicedToArray from\"C:/Users/Asus/quizapp-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{getAnswer,resetQuiz}from\"../Redux/Actions\";import{QuizCard}from\"./QuizCard\";import{motion}from\"framer-motion\";import img from\"../../assets/congo.png\";import{useNavigate}from\"react-router-dom\";// this is th logic of the final results model to be shown after the end of the quiz //\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ResultModel=function ResultModel(_ref){var name=_ref.name;var results=useSelector(function(state){return state.reducer.answers;});var mapped=results.map(function(el){return el.isCorrect;});var navigate=useNavigate();var disptach=useDispatch();//  this handler will reset our state and route us to the homepage by dispatching the reset action//\nvar resetQuizHandler=function resetQuizHandler(){disptach(resetQuiz());navigate(\"/\");};return/*#__PURE__*/_jsx(\"div\",{className:\"result-container d-flex\",children:/*#__PURE__*/_jsxs(motion.div,{className:\"result-main\",initial:{scale:0.8,opacity:0},animate:{scale:1,opacity:1},transition:{delay:0.1,duration:0.5},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"congo-img\",children:[/*#__PURE__*/_jsx(\"img\",{src:img,alt:\"\",width:\"350px\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Hii ! \",name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score is \",mapped.filter(function(el){return el===true;}).length,\" out of\",\" \",mapped.length]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"end-game-btn d-flex\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return resetQuizHandler();},children:\"Okay\"})})]})});};// this is all the logic of our final reults page //\nexport var Quiz=function Quiz(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setcount=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showModal=_useState4[0],setshowModal=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),finalAnswer=_useState6[0],setfinalAnswer=_useState6[1];var quiz=useSelector(function(state){return state.reducer.playQuiz;}).questions;var name=useSelector(function(state){return state.reducer.name;});var dispatch=useDispatch();// this handler dipacthes our selected answers and increments the count taking us to the next questions //\nvar nextQuestionHandler=function nextQuestionHandler(){dispatch(getAnswer(finalAnswer));if(count>=quiz.length-1){setshowModal(true);setcount(function(prev){return prev;});}else{setcount(function(prev){return prev+1;});}};//  this handler will change our selected answers if we select again and again and set them in the state //\nvar getAnswerHandler=function getAnswerHandler(answer,correct,id){var Answer={answer:answer,isCorrect:correct,id:id};setfinalAnswer(Answer);};// these our the states and data which is to be shown and played //\nvar question=quiz[count].question;var answers=quiz[count].answers;return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container d-flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"play-quiz-container-name\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"play-heading\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Hii! \",name]})}),/*#__PURE__*/_jsx(QuizCard,{nextQuestionHandler:nextQuestionHandler,count:count,question:question,answers:answers,getAnswerHandler:getAnswerHandler,length:quiz.length,selectedId:finalAnswer.id?finalAnswer.id:\"\"})]}),showModal&&/*#__PURE__*/_jsx(ResultModel,{name:name})]});};","map":{"version":3,"names":["React","useState","useDispatch","useSelector","getAnswer","resetQuiz","QuizCard","motion","img","useNavigate","jsx","_jsx","jsxs","_jsxs","ResultModel","_ref","name","results","state","reducer","answers","mapped","map","el","isCorrect","navigate","disptach","resetQuizHandler","className","children","div","initial","scale","opacity","animate","transition","delay","duration","src","alt","width","filter","length","onClick","Quiz","_useState","_useState2","_slicedToArray","count","setcount","_useState3","_useState4","showModal","setshowModal","_useState5","_useState6","finalAnswer","setfinalAnswer","quiz","playQuiz","questions","dispatch","nextQuestionHandler","prev","getAnswerHandler","answer","correct","id","Answer","question","selectedId"],"sources":["C:/Users/Asus/quizapp-project/src/components/PlayQuiz/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAnswer, resetQuiz } from \"../Redux/Actions\";\r\nimport { QuizCard } from \"./QuizCard\";\r\nimport { motion } from \"framer-motion\";\r\nimport img from \"../../assets/congo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// this is th logic of the final results model to be shown after the end of the quiz //\r\n\r\nexport const ResultModel = ({ name }) => {\r\n  const results = useSelector((state) => state.reducer.answers);\r\n  const mapped = results.map((el) => el.isCorrect);\r\n\r\n  const navigate = useNavigate();\r\n  const disptach = useDispatch();\r\n\r\n  //  this handler will reset our state and route us to the homepage by dispatching the reset action//\r\n  const resetQuizHandler = () => {\r\n    disptach(resetQuiz());\r\n\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-container d-flex\">\r\n      <motion.div\r\n        className=\"result-main\"\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        transition={{ delay: 0.1, duration: 0.5 }}\r\n      >\r\n        <div className=\"congo-img\">\r\n          <img src={img} alt=\"\" width={\"350px\"} />\r\n          <p>Hii ! {name}</p>\r\n          <p>\r\n            Your Score is {mapped.filter((el) => el === true).length} out of{\" \"}\r\n            {mapped.length}\r\n          </p>\r\n        </div>\r\n        <div className=\"end-game-btn d-flex\">\r\n          <button onClick={() => resetQuizHandler()}>Okay</button>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// this is all the logic of our final reults page //\r\n\r\nexport const Quiz = () => {\r\n  const [count, setcount] = useState(0);\r\n  const [showModal, setshowModal] = useState(false);\r\n  const [finalAnswer, setfinalAnswer] = useState({});\r\n\r\n  const quiz = useSelector((state) => state.reducer.playQuiz).questions;\r\n  const name = useSelector((state) => state.reducer.name);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // this handler dipacthes our selected answers and increments the count taking us to the next questions //\r\n\r\n  const nextQuestionHandler = () => {\r\n    dispatch(getAnswer(finalAnswer));\r\n\r\n    if (count >= quiz.length - 1) {\r\n      setshowModal(true);\r\n      setcount((prev) => prev);\r\n    } else {\r\n      setcount((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  //  this handler will change our selected answers if we select again and again and set them in the state //\r\n\r\n  const getAnswerHandler = (answer, correct, id) => {\r\n    const Answer = {\r\n      answer: answer,\r\n      isCorrect: correct,\r\n      id: id,\r\n    };\r\n    setfinalAnswer(Answer);\r\n  };\r\n\r\n  // these our the states and data which is to be shown and played //\r\n\r\n  const question = quiz[count].question;\r\n  const answers = quiz[count].answers;\r\n\r\n  return (\r\n    <div className=\"quiz-container d-flex\">\r\n      <div className=\"play-quiz-container-name\">\r\n        <div className=\"play-heading\">\r\n          <p>Hii! {name}</p>\r\n        </div>\r\n\r\n        <QuizCard\r\n          nextQuestionHandler={nextQuestionHandler}\r\n          count={count}\r\n          question={question}\r\n          answers={answers}\r\n          getAnswerHandler={getAnswerHandler}\r\n          length={quiz.length}\r\n          selectedId={finalAnswer.id ? finalAnswer.id : \"\"}\r\n        />\r\n      </div>\r\n      {showModal && <ResultModel name={name} />}\r\n    </div>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}