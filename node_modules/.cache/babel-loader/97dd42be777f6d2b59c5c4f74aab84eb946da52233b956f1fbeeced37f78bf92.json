{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\quizapp-project\\\\src\\\\components\\\\PlayQuiz\\\\Quiz.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAnswer, resetQuiz } from \"../Redux/Actions\";\nimport { QuizCard } from \"./QuizCard\";\nimport { motion } from \"framer-motion\";\nimport img from \"../../assets/congo.png\";\nimport { useNavigate } from \"react-router-dom\";\n\n// this is th logic of the final results model to be shown after the end of the quiz //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResultModel = _ref => {\n  _s();\n  let {\n    name\n  } = _ref;\n  const results = useSelector(state => state.reducer.answers);\n  const mapped = results.map(el => el.isCorrect);\n  const navigate = useNavigate();\n  const disptach = useDispatch();\n\n  //  this handler will reset our state and route us to the homepage by dispatching the reset action//\n  const resetQuizHandler = () => {\n    disptach(resetQuiz());\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container d-flex\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"result-main\",\n      initial: {\n        scale: 0.8,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      transition: {\n        delay: 0.1,\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"congo-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"\",\n          width: \"350px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hii ! \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Score is \", mapped.filter(el => el === true).length, \" out of\", \" \", mapped.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-game-btn d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => resetQuizHandler(),\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n// this is all the logic of our final reults page //\n_s(ResultModel, \"Y1fDHdDohr/AWFz+QZWMVdktYjk=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = ResultModel;\nexport const Quiz = () => {\n  _s2();\n  const [count, setcount] = useState(0);\n  const [showModal, setshowModal] = useState(false);\n  const [finalAnswer, setfinalAnswer] = useState({});\n  const quiz = useSelector(state => state.reducer.playQuiz).questions;\n  const name = useSelector(state => state.reducer.name);\n  const dispatch = useDispatch();\n\n  // this handler dipacthes our selected answers and increments the count taking us to the next questions //\n\n  const nextQuestionHandler = () => {\n    dispatch(getAnswer(finalAnswer));\n    if (count >= quiz.length - 1) {\n      setshowModal(true);\n      setcount(prev => prev);\n    } else {\n      setcount(prev => prev + 1);\n    }\n  };\n\n  //  this handler will change our selected answers if we select again and again and set them in the state //\n\n  const getAnswerHandler = (answer, correct, id) => {\n    const Answer = {\n      answer: answer,\n      isCorrect: correct,\n      id: id\n    };\n    setfinalAnswer(Answer);\n  };\n\n  // these our the states and data which is to be shown and played //\n\n  const question = quiz[count].question;\n  const answers = quiz[count].answers;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container d-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-quiz-container-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hii! \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuizCard, {\n        nextQuestionHandler: nextQuestionHandler,\n        count: count,\n        question: question,\n        answers: answers,\n        getAnswerHandler: getAnswerHandler,\n        length: quiz.length,\n        selectedId: finalAnswer.id ? finalAnswer.id : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ResultModel, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(Quiz, \"dMF6xQyWa9lqzWW3/ikquGQ4d9o=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c2 = Quiz;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResultModel\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","getAnswer","resetQuiz","QuizCard","motion","img","useNavigate","jsxDEV","_jsxDEV","ResultModel","_ref","_s","name","results","state","reducer","answers","mapped","map","el","isCorrect","navigate","disptach","resetQuizHandler","className","children","div","initial","scale","opacity","animate","transition","delay","duration","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","filter","length","onClick","_c","Quiz","_s2","count","setcount","showModal","setshowModal","finalAnswer","setfinalAnswer","quiz","playQuiz","questions","dispatch","nextQuestionHandler","prev","getAnswerHandler","answer","correct","id","Answer","question","selectedId","_c2","$RefreshReg$"],"sources":["C:/Users/Asus/quizapp-project/src/components/PlayQuiz/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAnswer, resetQuiz } from \"../Redux/Actions\";\r\nimport { QuizCard } from \"./QuizCard\";\r\nimport { motion } from \"framer-motion\";\r\nimport img from \"../../assets/congo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// this is th logic of the final results model to be shown after the end of the quiz //\r\n\r\nexport const ResultModel = ({ name }) => {\r\n  const results = useSelector((state) => state.reducer.answers);\r\n  const mapped = results.map((el) => el.isCorrect);\r\n\r\n  const navigate = useNavigate();\r\n  const disptach = useDispatch();\r\n\r\n  //  this handler will reset our state and route us to the homepage by dispatching the reset action//\r\n  const resetQuizHandler = () => {\r\n    disptach(resetQuiz());\r\n\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-container d-flex\">\r\n      <motion.div\r\n        className=\"result-main\"\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        transition={{ delay: 0.1, duration: 0.5 }}\r\n      >\r\n        <div className=\"congo-img\">\r\n          <img src={img} alt=\"\" width={\"350px\"} />\r\n          <p>Hii ! {name}</p>\r\n          <p>\r\n            Your Score is {mapped.filter((el) => el === true).length} out of{\" \"}\r\n            {mapped.length}\r\n          </p>\r\n        </div>\r\n        <div className=\"end-game-btn d-flex\">\r\n          <button onClick={() => resetQuizHandler()}>Okay</button>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// this is all the logic of our final reults page //\r\n\r\nexport const Quiz = () => {\r\n  const [count, setcount] = useState(0);\r\n  const [showModal, setshowModal] = useState(false);\r\n  const [finalAnswer, setfinalAnswer] = useState({});\r\n\r\n  const quiz = useSelector((state) => state.reducer.playQuiz).questions;\r\n  const name = useSelector((state) => state.reducer.name);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // this handler dipacthes our selected answers and increments the count taking us to the next questions //\r\n\r\n  const nextQuestionHandler = () => {\r\n    dispatch(getAnswer(finalAnswer));\r\n\r\n    if (count >= quiz.length - 1) {\r\n      setshowModal(true);\r\n      setcount((prev) => prev);\r\n    } else {\r\n      setcount((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  //  this handler will change our selected answers if we select again and again and set them in the state //\r\n\r\n  const getAnswerHandler = (answer, correct, id) => {\r\n    const Answer = {\r\n      answer: answer,\r\n      isCorrect: correct,\r\n      id: id,\r\n    };\r\n    setfinalAnswer(Answer);\r\n  };\r\n\r\n  // these our the states and data which is to be shown and played //\r\n\r\n  const question = quiz[count].question;\r\n  const answers = quiz[count].answers;\r\n\r\n  return (\r\n    <div className=\"quiz-container d-flex\">\r\n      <div className=\"play-quiz-container-name\">\r\n        <div className=\"play-heading\">\r\n          <p>Hii! {name}</p>\r\n        </div>\r\n\r\n        <QuizCard\r\n          nextQuestionHandler={nextQuestionHandler}\r\n          count={count}\r\n          question={question}\r\n          answers={answers}\r\n          getAnswerHandler={getAnswerHandler}\r\n          length={quiz.length}\r\n          selectedId={finalAnswer.id ? finalAnswer.id : \"\"}\r\n        />\r\n      </div>\r\n      {showModal && <ResultModel name={name} />}\r\n    </div>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}